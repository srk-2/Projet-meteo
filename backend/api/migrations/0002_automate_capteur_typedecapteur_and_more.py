# Generated by Django 5.0.7 on 2024-08-05 03:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Automate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomautomate', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('installation_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Capteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomcapteur', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDeCapteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.AlterModelManagers(
            name='utilisateur',
            managers=[
            ],
        ),
        migrations.AlterField(
            model_name='utilisateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='utilisateurs', related_query_name='utilisateur', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='utilisateurs', related_query_name='utilisateur', to='auth.permission'),
        ),
        migrations.CreateModel(
            name='CapteurData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('air_temperature', models.FloatField(blank=True, null=True)),
                ('relative_humidity', models.FloatField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('wind', models.FloatField(blank=True, null=True)),
                ('solar_radiation', models.FloatField(blank=True, null=True)),
                ('soil_temperature', models.FloatField(blank=True, null=True)),
                ('soil_moisture', models.FloatField(blank=True, null=True)),
                ('dew_point', models.FloatField(blank=True, null=True)),
                ('capteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.capteur')),
            ],
        ),
        migrations.AddField(
            model_name='capteur',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.typedecapteur'),
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('air_temperature', models.FloatField(blank=True, null=True)),
                ('relative_humidity', models.FloatField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('wind', models.FloatField(blank=True, null=True)),
                ('solar_radiation', models.FloatField(blank=True, null=True)),
                ('soil_temperature', models.FloatField(blank=True, null=True)),
                ('soil_moisture', models.FloatField(blank=True, null=True)),
                ('dew_point', models.FloatField(blank=True, null=True)),
                ('automate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.automate')),
            ],
        ),
    ]
